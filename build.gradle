buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
        classpath 'com.netflix.nebula:gradle-lint-plugin:latest.release'
    }
}


apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'nebula.lint'

group = 'antonmry'
version = '1.0-SNAPSHOT'

description = "Source Code for the Kafka Streams Workshop by @antonmry"

sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = 'antonmry.exercise_0.KafkaStreamsApp0'

task runExercise0(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "antonmry.exercise_0.KafkaStreamsApp0"
}

task runExercise1(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "antonmry.exercise_1.KafkaStreamsApp1"
}

task runExercise2(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "antonmry.exercise_2.KafkaStreamsApp2"
}

task runExercise3(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "antonmry.exercise_3.KafkaStreamsApp3"
}

task runExercise4(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "antonmry.exercise_4.KafkaStreamsApp4"
}

task runExercise5(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "antonmry.exercise_5.KafkaStreamsApp5"
}

task runSolution(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "antonmry.solution.KafkaStreamsApp"
}

jar {
    archiveName = 'antonmry-kafka-streams-workshop-1.0-SNAPSHOT.jar'
}

repositories {
    mavenCentral()
}

configurations {
    compile.exclude group: 'ch.qos.logback'
}

compileJava {
    options.warnings = true
    options.deprecation = true
}

junitPlatform {
    enableStandardTestTask = true
}

dependencies {
    compile group: 'com.google.code.gson', name: 'gson', version: '2.6.1'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.apache.kafka', name: 'kafka-streams', version: '2.3.1'
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.3.1'

    compile(group: 'com.github.javafaker', name: 'javafaker', version: '0.12') {
        exclude group: 'ch.qos.logback'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }

    testCompile group: 'org.apache.kafka', name: 'kafka-streams', version: '2.3.1', classifier: 'test'
    testCompile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.3.1', classifier: 'test'
    testCompile group: 'com.salesforce.kafka.test', name: 'kafka-junit5', version: '3.2.0'
    testCompile group: 'org.scala-lang', name: 'scala-library-all', version: '2.12.4'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.0.0'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.0.0'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.10.0'
    testCompile group: 'org.hamcrest', name: 'hamcrest-junit', version: '2.0.0.0'

    testCompile group:  'org.apache.kafka', name: 'kafka-streams-test-utils', version: '2.3.1'

    testCompile(group: 'org.apache.kafka', name: 'kafka_2.12', version: '2.3.1') {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }

    testCompile(group: 'org.apache.kafka', name: 'kafka_2.12', version: '2.3.1', classifier: 'test') {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }

}

//gradleLint.rules += 'unused-dependency'

